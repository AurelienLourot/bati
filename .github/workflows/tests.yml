on:
  - pull_request

jobs:
  cache-and-install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ["16", "18"]
        os:
          - ubuntu-latest
          - macOS-latest

          # Building packages/cli fails on Windows with
          #
          # packages/cli build$ rimraf dist && tsup
          # packages/cli build: CLI Building entry: index.ts
          # packages/cli build: CLI Using tsconfig: tsconfig.json
          # packages/cli build: CLI tsup v6.7.0
          # packages/cli build: CLI Using tsup config: D:\a\bati\bati\packages\cli\tsup.config.ts
          # packages/cli build: CLI Target: es2020
          # packages/cli build: ESM Build start
          # packages/cli build: DTS Build start
          # packages/cli build: ESM Build failed
          # packages/cli build: Error: Build failed with 1 error:
          # packages/cli build: error: ENOENT: no such file or directory, open 'D:\a\bati\bati\packages\cli\dist\boilerplates\boilerplates.json'
          # packages/cli build:     at failureErrorWithLog (D:\a\bati\bati\node_modules\.pnpm\esbuild@0.17.19\node_modules\esbuild\lib\main.js:1636:15)
          # packages/cli build:     at D:\a\bati\bati\node_modules\.pnpm\esbuild@0.17.19\node_modules\esbuild\lib\main.js:1048:25
          # packages/cli build:     at D:\a\bati\bati\node_modules\.pnpm\esbuild@0.17.19\node_modules\esbuild\lib\main.js:1512:9
          #
          # - windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm run build

      - name: Run tests
        run: pnpm run -r test
